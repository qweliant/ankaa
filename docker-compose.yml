version: "3.8"

services:
  postgres:
    image: postgres:17
    container_name: ankaa_postgres_dev
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ankaa_dev
    ports:
      - "5432:5432" # PostgreSQL exposed on port 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ankaa_network

  redis:
    image: redis:7-alpine
    container_name: ankaa_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ankaa_network

  timescale:
    image: timescale/timescaledb-ha:pg17
    container_name: ankaa_timescale_dev
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ankaa_timescale_dev
    ports:
      - "5433:5432" # Map host 5433 to container's 5432
    volumes:
      - timescale_data:/var/lib/postgresql/data
    networks:
      - ankaa_network
  mqtt:
    image: eclipse-mosquitto
    container_name: mqtt_broker
    ports:
      - "1883:1883" # MQTT Protocol
      - "9001:9001" # WebSocket for MQTT (optional)
    volumes:
      - mosquitto_data:/mosquitto/data
      - mosquitto_config:/mosquitto/config
      - mosquitto_logs:/mosquitto/logs
    networks:
      - ankaa_network

  rust_iot_mock:
    build:
      context: ./ankaa_iot_mock/iot_mock
    container_name: rust_iot_mock
    depends_on:
      - mqtt # Wait for MQTT to be ready before starting the Rust service
    ports:
      - "8080:8080" # Exposing port for the mock service
    networks:
      - ankaa_network

networks:
  ankaa_network:
    driver: bridge

volumes:
  postgres_data:
  timescale_data:
  redis_data:
  mosquitto_data:
  mosquitto_config:
  mosquitto_logs:
